
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DICE DICE_CONDITION DIVIDE EQ GE GT LE LPAREN LT MINUS NE NUMBER PLUS RPAREN TIMESexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression EQ expression\n                  | expression NE expression\n                  | expression LT expression\n                  | expression LE expression\n                  | expression GT expression\n                  | expression GE expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : DICE\n                  | DICE_CONDITION'
    
_lr_action_items = {'LPAREN':([0,2,6,7,8,9,10,11,12,13,14,15,],[2,2,2,2,2,2,2,2,2,2,2,2,]),'NUMBER':([0,2,6,7,8,9,10,11,12,13,14,15,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'DICE':([0,2,6,7,8,9,10,11,12,13,14,15,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'DICE_CONDITION':([0,2,6,7,8,9,10,11,12,13,14,15,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'$end':([1,3,4,5,17,18,19,20,21,22,23,24,25,26,27,],[0,-12,-13,-14,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,]),'PLUS':([1,3,4,5,16,17,18,19,20,21,22,23,24,25,26,27,],[6,-12,-13,-14,6,6,6,6,6,6,6,6,6,6,6,-11,]),'MINUS':([1,3,4,5,16,17,18,19,20,21,22,23,24,25,26,27,],[7,-12,-13,-14,7,7,7,7,7,7,7,7,7,7,7,-11,]),'TIMES':([1,3,4,5,16,17,18,19,20,21,22,23,24,25,26,27,],[8,-12,-13,-14,8,8,8,8,8,8,8,8,8,8,8,-11,]),'DIVIDE':([1,3,4,5,16,17,18,19,20,21,22,23,24,25,26,27,],[9,-12,-13,-14,9,9,9,9,9,9,9,9,9,9,9,-11,]),'EQ':([1,3,4,5,16,17,18,19,20,21,22,23,24,25,26,27,],[10,-12,-13,-14,10,10,10,10,10,10,10,10,10,10,10,-11,]),'NE':([1,3,4,5,16,17,18,19,20,21,22,23,24,25,26,27,],[11,-12,-13,-14,11,11,11,11,11,11,11,11,11,11,11,-11,]),'LT':([1,3,4,5,16,17,18,19,20,21,22,23,24,25,26,27,],[12,-12,-13,-14,12,12,12,12,12,12,12,12,12,12,12,-11,]),'LE':([1,3,4,5,16,17,18,19,20,21,22,23,24,25,26,27,],[13,-12,-13,-14,13,13,13,13,13,13,13,13,13,13,13,-11,]),'GT':([1,3,4,5,16,17,18,19,20,21,22,23,24,25,26,27,],[14,-12,-13,-14,14,14,14,14,14,14,14,14,14,14,14,-11,]),'GE':([1,3,4,5,16,17,18,19,20,21,22,23,24,25,26,27,],[15,-12,-13,-14,15,15,15,15,15,15,15,15,15,15,15,-11,]),'RPAREN':([3,4,5,16,17,18,19,20,21,22,23,24,25,26,27,],[-12,-13,-14,27,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,6,7,8,9,10,11,12,13,14,15,],[1,16,17,18,19,20,21,22,23,24,25,26,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',6),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',7),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',8),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',9),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','parser.py',10),
  ('expression -> expression NE expression','expression',3,'p_expression_binop','parser.py',11),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','parser.py',12),
  ('expression -> expression LE expression','expression',3,'p_expression_binop','parser.py',13),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','parser.py',14),
  ('expression -> expression GE expression','expression',3,'p_expression_binop','parser.py',15),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',38),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',42),
  ('expression -> DICE','expression',1,'p_expression_dice','parser.py',46),
  ('expression -> DICE_CONDITION','expression',1,'p_expression_dice','parser.py',47),
]
